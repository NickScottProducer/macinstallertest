name: build macOS installers (13 + 14)

on:
  workflow_dispatch: {}

jobs:
  build:
    strategy:
      matrix:
        os: [macos-13, macos-14]   # 13=x86_64, 14=arm64
        app: [WillowKickSnareInstaller, ChiodosDrumkitInstaller]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Show runner env
        run: |
          sw_vers
          uname -m

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt pyinstaller

      # Optional: use a mac icon if you later add icon.icns to the repo
      - name: Determine icon flag
        run: |
          if [ -f icon.icns ]; then echo "ICON_FLAG=--icon icon.icns" >> $GITHUB_ENV; else echo "ICON_FLAG=" >> $GITHUB_ENV; fi

      - name: Build .app with PyInstaller
        run: |
          APP="${{ matrix.app }}"
          pyinstaller installer_v2.py \
            --name "$APP" \
            --windowed --clean \
            --collect-data customtkinter \
            --collect-submodules Crypto \
            $ICON_FLAG

      - name: Create DMG with hdiutil
        run: |
          APP="${{ matrix.app }}"
          ARCH=$(uname -m)  # x86_64 on macos-13, arm64 on macos-14
          mkdir -p "dmgroot"
          cp -R "dist/${APP}.app" "dmgroot/"
          hdiutil create -volname "${APP}" -srcfolder "dmgroot" -ov -format UDZO "dist/${APP}-${ARCH}.dmg"
          rm -rf dmgroot

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: "${{ matrix.app }}-${{ matrix.os }}"
          path: "dist/${{ matrix.app }}-*.dmg"
