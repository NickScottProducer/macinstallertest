# .github/workflows/build-dmgs.yml
name: Build DMGs from macOS 13 & 14 zips

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: macos-15
    strategy:
      matrix:
        variant:
          - { label: "macos-13", zip_path: "WillowKickSnareInstaller-macos-13.zip" }
          - { label: "macos-14", zip_path: "WillowKickSnareInstaller-macos-14.zip" }

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Unzip .app
        shell: bash
        run: |
          set -euo pipefail
          ZIP="${{ matrix.variant.zip_path }}"
          [ -f "$ZIP" ] || { echo "ZIP not found: $ZIP"; exit 1; }
          rm -rf build dmg_src
          mkdir -p build
          unzip -q "$ZIP" -d build
          APP_PATH="$(find build -maxdepth 4 -type d -name '*.app' -print -quit)"
          [ -n "$APP_PATH" ] || { echo "No .app found inside $ZIP"; exit 2; }
          echo "APP_PATH=$APP_PATH" >> "$GITHUB_ENV"

      - name: Create DMG
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p dmg_src
          cp -R "${APP_PATH}" dmg_src/
          ln -s /Applications dmg_src/Applications
          DMG="WillowKickSnareInstaller-${{ matrix.variant.label }}.dmg"
          hdiutil create \
            -volname "Willow Drums Installer" \
            -srcfolder dmg_src \
            -ov -format UDZO "$DMG"
          echo "DMG=$DMG" >> "$GITHUB_ENV"

      - name: Upload DMG
        uses: actions/upload-artifact@v4
        with:
          name: WillowKickSnareInstaller-${{ matrix.variant.label }}
          path: ${{ env.DMG }}

  test:
    needs: build
    strategy:
      matrix:
        os: [macos-13, macos-14]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Download matching DMG
        uses: actions/download-artifact@v4
        with:
          name: WillowKickSnareInstaller-${{ matrix.os }}
          path: dist

      - name: Mount and sanity-check
        shell: bash
        run: |
          set -euo pipefail
          DMG="$(ls dist/*.dmg)"
          MNT=/Volumes/APPTEST
          hdiutil attach "$DMG" -mountpoint "$MNT" -nobrowse
          APP="$(find "$MNT" -maxdepth 1 -type d -name '*.app' -print -quit)"
          [ -n "$APP" ] || { echo "No .app at DMG root"; find "$MNT" -maxdepth 2 -print; hdiutil detach "$MNT"; exit 3; }
          sudo cp -R "$APP" /Applications/
          hdiutil detach "$MNT"
          APPNAME="$(basename "$APP")"
          /usr/bin/spctl --assess --type execute -vv "/Applications/$APPNAME" || true
          /usr/bin/codesign -dv --verbose=4 "/Applications/$APPNAME" 2>&1 | tee codesign.txt

      - name: Upload test logs
        uses: actions/upload-artifact@v4
        with:
          name: macos-${{ matrix.os }}-test-logs
          path: |
            codesign.txt
